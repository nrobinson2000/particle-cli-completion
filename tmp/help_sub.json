{
    "binary": {
        "inspect": [
            "Describe binary contents",
            "Usage: particle binary inspect [options] <filename>",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Examples:",
            "particle binary inspect firmware.bin  Describe contents of firmware.bin",
            ""
        ]
    },
    "call": {},
    "cloud": {
        "list": [
            "Display a list of your devices, as well as their variables and functions",
            "Usage: particle cloud list [options] [filter]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Param filter can be: online, offline, a platform name (photon, electron, etc), a device ID or name",
            ""
        ],
        "claim": [
            "Register a device with your user account with the cloud",
            "Usage: particle cloud claim [options] <deviceID>",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Examples:",
            "particle cloud claim 123456789  Claim device by id to your account",
            ""
        ],
        "remove": [
            "Release a device from your account so that another user may claim it",
            "Usage: particle cloud remove [options] <device>",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--yes  Answer yes to all questions  [boolean]",
            "",
            "Examples:",
            "particle cloud remove 0123456789ABCDEFGHI  Remove device by id from your account",
            ""
        ],
        "name": [
            "Give a device a name!",
            "Usage: particle cloud name [options] <device> <name>",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Examples:",
            "particle cloud name red green  Rename device `red` to `green`",
            ""
        ],
        "flash": [
            "Pass a binary, source file, or source directory to a device!",
            "Usage: particle cloud flash [options] <device> [files...]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--target          The firmware version to compile against. Defaults to latest version, or version on device for cellular.  [string]",
            "--followSymlinks  Follow symlinks when collecting files  [boolean]",
            "--product         Target a device within the given Product ID or Slug  [string]",
            "",
            "Examples:",
            "particle cloud flash blue                                      Compile the source code in the current directory in the cloud and flash to device `blue`",
            "particle cloud flash green tinker                              Flash the default `tinker` app to device `green`",
            "particle cloud flash red blink.ino                             Compile `blink.ino` in the cloud and flash to device `red`",
            "particle cloud flash orange firmware.bin                       Flash a pre-compiled `firmware.bin` binary to device `orange`",
            "particle cloud flash 0123456789abcdef01234567 --product 12345  Compile the source code in the current directory in the cloud and flash to device `0123456789abcdef01234567` within product `12345`",
            ""
        ],
        "compile": [
            "Compile a source file, or directory using the cloud compiler",
            "Usage: particle cloud compile [options] <deviceType> [files...]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--target          The firmware version to compile against. Defaults to latest version, or version on device for cellular.  [string]",
            "--followSymlinks  Follow symlinks when collecting files  [boolean]",
            "--saveTo          Filename for the compiled binary  [string]",
            "",
            "Examples:",
            "particle cloud compile photon                                  Compile the source code in the current directory in the cloud for a `photon`",
            "particle cloud compile electron project --saveTo electron.bin  Compile the source code in the project directory in the cloud for an `electron` and save it to a file named `electron.bin`",
            "",
            "Param deviceType can be: core, photon, p1, electron, argon, asom, boron, bsom, xenon, xsom, etc",
            ""
        ],
        "nyan": [
            "Make your device shout rainbows",
            "Usage: particle cloud nyan [options] <device> [onOff]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--product  Target a device within the given Product ID or Slug  [string]",
            "",
            "Examples:",
            "particle cloud nyan blue                  Make the device named `blue` start signaling",
            "particle cloud nyan blue off              Make the device named `blue` stop signaling",
            "particle cloud nyan blue --product 12345  Make the device named `blue` within product `12345` start signaling",
            ""
        ],
        "login": [
            "Login to the cloud and store an access token locally",
            "Usage: particle cloud login [options]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "-u, --username  your username  [string]",
            "-p, --password  your password  [string]",
            "-t, --token     an existing Particle access token to use  [string]",
            "--otp           the login code if two-step authentication is enabled  [string]",
            "",
            "Examples:",
            "particle cloud login                                              prompt for credentials and log in",
            "particle cloud login --username user@example.com --password test  log in with credentials provided on the command line",
            "particle cloud login --token <my-api-token>                       log in with an access token provided on the command line",
            ""
        ],
        "logout": [
            "Log out of your session and clear your saved access token",
            "Usage: particle cloud logout [options]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            ""
        ]
    },
    "compile": {},
    "config": {},
    "device": {
        "add": [
            "Register a device with your user account with the cloud",
            "Usage: particle device add [options] <deviceID>",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Examples:",
            "particle device add 123456789  Claim device by id to your account",
            ""
        ],
        "remove": [
            "Release a device from your account so that another user may claim it",
            "Usage: particle device remove [options] <device>",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--yes  Answer yes to all questions  [boolean]",
            "",
            "Examples:",
            "particle device remove 0123456789ABCDEFGHI  Remove device by id from your account",
            ""
        ],
        "rename": [
            "Give a device a name!",
            "Usage: particle device rename [options] <device> <name>",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Examples:",
            "particle device rename red green  Rename device `red` to `green`",
            ""
        ],
        "doctor": [
            "Put your device back into a healthy state",
            "Usage: particle device doctor [options]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            ""
        ]
    },
    "doctor": {},
    "flash": {},
    "function": {
        "list": [
            "Show functions provided by your device(s)",
            "Usage: particle function list [options]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            ""
        ],
        "call": [
            "Call a particular function on a device",
            "Usage: particle function call [options] <device> <function> [argument]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--product  Target a device within the given Product ID or Slug  [string]",
            "",
            "Examples:",
            "particle function call coffee brew                                    Call the `brew` function on the `coffee` device",
            "particle function call board digitalWrite D7=HIGH                     Call the `digitalWrite` function with argument `D7=HIGH` on the `board` device",
            "particle function call 0123456789abcdef01234567 brew --product 12345  Call the `brew` function on the device with id `0123456789abcdef01234567` within product `12345`",
            ""
        ]
    },
    "get": {},
    "identify": {},
    "keys": {
        "new": [
            "Generate a new set of keys for your device",
            "Usage: particle keys new [options] [filename]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--protocol  Communication protocol for the device using the key. tcp or udp  [string]",
            ""
        ],
        "load": [
            "Load a key saved in a file onto your device",
            "Usage: particle keys load [options] <filename>",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            ""
        ],
        "save": [
            "Save a key from your device to a file",
            "Usage: particle keys save [options] <filename>",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--force  Force overwriting of <filename> if it exists  [boolean] [default: false]",
            ""
        ],
        "send": [
            "Tell a server which key you'd like to use by sending your public key in PEM format",
            "Usage: particle keys send [options] <deviceID> <filename>",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--product_id  The product ID to use when provisioning a new device  [number]",
            ""
        ],
        "doctor": [
            "Creates and assigns a new key to your device, and uploads it to the cloud",
            "Usage: particle keys doctor [options] <deviceID>",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--protocol  Communication protocol for the device using the key. tcp or udp  [string]",
            ""
        ],
        "server": [
            "Switch server public keys.",
            "Usage: particle keys server [options] [filename] [outputFilename]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--protocol    Communication protocol for the device using the key. tcp or udp  [string]",
            "--host        Hostname or IP address of the server to add to the key  [string]",
            "--port        Port number of the server to add to the key  [number]",
            "--deviceType  Generate key file for the provided device type  [string]",
            "",
            "Defaults to the Particle public cloud or you can provide another key in DER format and the server hostname or IP and port",
            ""
        ],
        "address": [
            "Read server configured in device server public key",
            "Usage: particle keys address [options]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--protocol  Communication protocol for the device using the key. tcp or udp  [string]",
            ""
        ],
        "protocol": [
            "Retrieve or change transport protocol the device uses to communicate with the cloud",
            "Usage: particle keys protocol [options]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--protocol  Communication protocol for the device using the key. tcp or udp  [string]",
            ""
        ]
    },
    "library": {
        "add": [
            "Add a library to the current project.",
            "Usage: particle library add [options] <name>",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Examples:",
            "particle library add InternetButton  Add the InternetButton library to your project. Create a project with the project init command",
            ""
        ],
        "create": [
            "Create a new library in the specified or current directory",
            "Usage: particle library create [options]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--name     The name of the library to create.  [string]",
            "--version  The initial version of the library to create.  [string]",
            "--author   The author of the library.  [string]",
            ""
        ],
        "copy": [
            "Copy a library to the current project",
            "Usage: particle library copy [options] [name]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            ""
        ],
        "list": [
            "List libraries available",
            "Usage: particle library list [options] [sections...]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--filter           filters libraries not matching the text  [string]",
            "--non-interactive  Prints a single page of libraries without prompting  [boolean]",
            "--page             Start the listing at the given page number  [number]",
            "--limit            The number of items to show per page  [number]",
            "--json             output JSON formatted data [experimental]  [boolean]",
            ""
        ],
        "migrate": [
            "Migrate a local library from v1 to v2 format",
            "Usage: particle library migrate [options] [library...]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--test, --dryrun  test if the library can be migrated  [boolean]",
            "--adapter         add include file adapters to support v1-style includes \"library/library.h\"  [boolean] [default: true]",
            ""
        ],
        "search": [
            "Search available libraries",
            "Usage: particle library search [options] <name>",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--json  output JSON formatted data [experimental]  [boolean]",
            ""
        ],
        "upload": [
            "Uploads a private version of a library.",
            "Usage: particle library upload [options]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--dryRun  perform validation steps but don't actually upload the library.  [boolean]",
            ""
        ],
        "publish": [
            "Publish a private library, making it public",
            "Usage: particle library publish [options] [name]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            ""
        ],
        "view": [
            "View details about a library",
            "Usage: particle library view [options] <name>",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--readme  display the readme for the library  [boolean]",
            "--source  display the main source file for the library  [boolean]",
            "--header  display the main header file for the library  [boolean]",
            "--json    output JSON formatted data [experimental]  [boolean]",
            ""
        ]
    },
    "list": {},
    "login": {},
    "logout": {},
    "mesh": {
        "create": [
            "Create a new network",
            "Usage: particle mesh create [options] <network_name> <device>",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--password  Network password. The minimum password length is 6 characters  [string]",
            "--channel   Network channel. By default, the device will try to pick the least congested channel in your environment  [number]",
            "--yes, -y   Answer yes to all questions  [boolean]",
            "",
            "Examples:",
            "particle mesh create my_network my_argon  Create a network named \"my_network\" using a device named \"my_argon\"",
            ""
        ],
        "add": [
            "Add a device to a network",
            "Usage: particle mesh add [options] <new_device> <assisting_device>",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--password  Network password  [string]",
            "--yes, -y   Answer yes to all questions  [boolean]",
            "",
            "Examples:",
            "particle mesh add my_xenon my_argon  Add a device named \"my_xenon\" to the current network of a device named \"my_argon\"",
            ""
        ],
        "remove": [
            "Remove a device from its network",
            "Usage: particle mesh remove [options] <device>",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--yes, -y  Answer yes to all questions  [boolean]",
            "",
            "Examples:",
            "particle mesh remove my_xenon  Remove a device named \"my_xenon\" from its current network",
            ""
        ],
        "list": [
            "List all networks and their member devices",
            "Usage: particle mesh list [options] [network]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--networks-only, -n  Do not list member devices  [boolean]",
            ""
        ],
        "info": [
            "Get information about the current device's network",
            "Usage: particle mesh info [options] <device>",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            ""
        ],
        "scan": [
            "Scan for networks",
            "Usage: particle mesh scan [options] <device>",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            ""
        ]
    },
    "monitor": {},
    "nyan": {},
    "preprocess": {},
    "product": {
        "device": [
            "Manage the devices associated with your product",
            "Usage: particle product device <command>",
            "Help:  particle help product device <command>",
            "",
            "Commands:",
            "list    List all devices that are part of a product",
            "add     Adds one or more devices into a Product",
            "remove  Removes a device from a Product",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            ""
        ]
    },
    "project": {
        "create": [
            "Create a new project in the current or specified directory",
            "Usage: particle project create [options] [dir]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--name  provide a name for the project  [string]",
            ""
        ]
    },
    "publish": {},
    "serial": {
        "list": [
            "Show devices connected via serial to your computer",
            "Usage: particle serial list [options]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            ""
        ],
        "monitor": [
            "Connect and display messages from a device",
            "Usage: particle serial monitor [options]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--follow  Reopen the port after it closes, for example when the device resets  [boolean]",
            "--port    Use this serial port instead of auto-detecting. Useful if there are more than 1 connected device  [string]",
            ""
        ],
        "identify": [
            "Ask for and display device ID via serial",
            "Usage: particle serial identify [options]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--port  Use this serial port instead of auto-detecting. Useful if there are more than 1 connected device  [string]",
            ""
        ],
        "wifi": [
            "Configure Wi-Fi credentials over serial",
            "Usage: particle serial wifi [options]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--file  Take the credentials from a JSON file instead of prompting for them  [string]",
            "--port  Use this serial port instead of auto-detecting. Useful if there are more than 1 connected device  [string]",
            "",
            "Examples:",
            "particle serial wifi                          Prompt for Wi-Fi credentials and send them to a device over serial",
            "particle serial wifi --file credentials.json  Read Wi-Fi credentials from credentials.json and send them to a device over serial",
            "",
            "The JSON file for passing Wi-Fi credentials should look like this:",
            "{",
            "\"network\": \"my_ssid\",",
            "\"security\": \"WPA2_AES\",",
            "\"password\": \"my_password\"",
            "}",
            "",
            "The security property can be NONE, WEP, WPA2_AES, WPA2_TKIP, WPA2_AES+TKIP, WPA_AES, WPA_TKIP, WPA_AES+TKIP.",
            "For enterprise Wi-Fi, set security to WPA_802.1x or WPA2_802.1x and provide the eap, username, outer_identity, client_certificate, private_key and root_ca properties.",
            ""
        ],
        "mac": [
            "Ask for and display MAC address via serial",
            "Usage: particle serial mac [options]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--port  Use this serial port instead of auto-detecting. Useful if there are more than 1 connected device  [string]",
            ""
        ],
        "inspect": [
            "Ask for and display device module information via serial",
            "Usage: particle serial inspect [options]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--port  Use this serial port instead of auto-detecting. Useful if there are more than 1 connected device  [string]",
            ""
        ],
        "flash": [
            "Flash firmware over serial using YMODEM protocol",
            "Usage: particle serial flash [options] <binary>",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--yes   Answer yes to all questions  [boolean]",
            "--port  Use this serial port instead of auto-detecting. Useful if there are more than 1 connected device  [string]",
            ""
        ],
        "claim": [
            "Claim a device with the given claim code",
            "Usage: particle serial claim [options] <claimCode>",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--port  Use this serial port instead of auto-detecting. Useful if there are more than 1 connected device  [string]",
            ""
        ]
    },
    "setup": {},
    "subscribe": {},
    "token": {
        "list": [
            "List all access tokens for your account",
            "Usage: particle token list [options]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            ""
        ],
        "revoke": [
            "Revoke an access token",
            "Usage: particle token revoke [options] <tokens...>",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--force  Force deleting access token used by this CLI  [boolean]",
            ""
        ],
        "create": [
            "Create a new access token",
            "Usage: particle token create [options]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--expires-in     Create a token valid for this many seconds. When omitted, the Particle API assigns a default expiration.  [number]",
            "--never-expires  Create a token that doesn't expire. Useful for a token that will be used by a cloud application for making Particle API requests.  [boolean]",
            ""
        ]
    },
    "udp": {
        "send": [
            "Sends a UDP packet to the specified host and port",
            "Usage: particle udp send [options] <host> <port> <message>",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            ""
        ],
        "listen": [
            "Listens for UDP packets on an optional port (default 5549)",
            "Usage: particle udp listen [options] [port]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            ""
        ]
    },
    "update": {},
    "update-cli": {},
    "usb": {
        "list": [
            "List the devices connected to the host computer",
            "Usage: particle usb list [options] [filter]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--exclude-dfu  Do not list devices which are in DFU mode  [boolean]",
            "--ids-only     Print only device IDs  [boolean]",
            "",
            "Param filter can be: online, offline, a platform name (photon, electron, etc), a device ID or name",
            ""
        ],
        "start-listening": [
            "Put a device into the listening mode",
            "Usage: particle usb start-listening [options] [devices...]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--all  Send the command to all devices connected to the host computer  [boolean]",
            "",
            "Examples:",
            "particle usb start-listening my_device  Put a device named \"my_device\" into the listening mode",
            "particle usb start-listening --all      Put all devices connected to the host computer into the listening mode",
            ""
        ],
        "listen": [
            "alias for start-listening",
            "Usage: particle usb listen [options] [devices...]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--all  Send the command to all devices connected to the host computer  [boolean]",
            "",
            "Examples:",
            "particle usb listen my_device  Put a device named \"my_device\" into the listening mode",
            "particle usb listen --all      Put all devices connected to the host computer into the listening mode",
            ""
        ],
        "stop-listening": [
            "Make a device exit the listening mode",
            "Usage: particle usb stop-listening [options] [devices...]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--all  Send the command to all devices connected to the host computer  [boolean]",
            "",
            "Examples:",
            "particle usb stop-listening my_device  Make a device named \"my_device\" exit the listening mode",
            "particle usb stop-listening --all      Make all devices connected to the host computer exit the listening mode",
            ""
        ],
        "safe-mode": [
            "Put a device into the safe mode",
            "Usage: particle usb safe-mode [options] [devices...]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--all  Send the command to all devices connected to the host computer  [boolean]",
            "",
            "Examples:",
            "particle usb safe-mode my_device  Put a device named \"my_device\" into the safe mode",
            "particle usb safe-mode --all      Put all devices connected to the host computer into the safe mode",
            ""
        ],
        "dfu": [
            "Put a device into the DFU mode",
            "Usage: particle usb dfu [options] [devices...]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--all  Send the command to all devices connected to the host computer  [boolean]",
            "",
            "Examples:",
            "particle usb dfu my_device  Put a device named \"my_device\" into the DFU mode",
            "particle usb dfu --all      Put all devices connected to the host computer into the DFU mode",
            ""
        ],
        "reset": [
            "Reset a device",
            "Usage: particle usb reset [options] [devices...]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--all  Send the command to all devices connected to the host computer  [boolean]",
            "",
            "Examples:",
            "particle usb reset my_device  Reset a device named \"my_device\"",
            "particle usb reset --all      Reset all devices connected to the host computer",
            ""
        ],
        "setup-done": [
            "Set the setup done flag",
            "Usage: particle usb setup-done [options] [devices...]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--reset  Clear the setup done flag  [boolean]",
            "--all    Send the command to all devices connected to the host computer  [boolean]",
            "",
            "Examples:",
            "particle usb setup-done my_device          Set the setup done flag on the device \"my_device\"",
            "particle usb setup-done --reset my_device  Clear the setup done flag on the device \"my_device\"",
            "particle usb setup-done --all              Set the setup done flag on all devices connected to the host computer",
            ""
        ],
        "configure": [
            "Update the system USB configuration",
            "Usage: particle usb configure [options]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            ""
        ],
        "cloud-status": [
            "Check a device's cloud connection state",
            "Usage: particle usb cloud-status [options] <device>",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--until    Poll your device for a specific connection state and then exit  [string] [choices: \"unknown\", \"disconnected\", \"connecting\", \"connected\", \"disconnecting\"]",
            "--timeout  How long should polling wait (in ms) for the requested status?  [number] [default: 60000]",
            "",
            "Examples:",
            "particle usb cloud-status blue                   Check the cloud connection status for the device named `blue`",
            "particle usb cloud-status red --until connected  Poll cloud connection status for the device named `red` until it reports `connected`",
            ""
        ]
    },
    "variable": {
        "list": [
            "Show variables provided by your device(s)",
            "Usage: particle variable list [options]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            ""
        ],
        "get": [
            "Retrieve a value from your device",
            "Usage: particle variable get [options] [device] [variableName]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--time     Show the time when the variable was received  [boolean]",
            "--product  Target a device within the given Product ID or Slug  [string]",
            "",
            "Examples:",
            "particle variable get basement temperature                                  Read the `temperature` variable from the device `basement`",
            "particle variable get 0123456789abcdef01234567 temperature --product 12345  Read the `temperature` variable from the device with id `0123456789abcdef01234567` within product `12345`",
            "particle variable get all temperature                                       Read the `temperature` variable from all my devices",
            ""
        ],
        "monitor": [
            "Connect and display messages from a device",
            "Usage: particle variable monitor [options] [device] [variableName]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Options:",
            "--time   Show the time when the variable was received  [boolean]",
            "--delay  Interval in milliseconds between variable fetches  [number]",
            "",
            "Examples:",
            "particle variable monitor up temp --delay 2000  Read the temp variable from the device up every 2 seconds",
            ""
        ]
    },
    "webhook": {
        "create": [
            "Creates a postback to the given url when your event is sent",
            "Usage: particle webhook create [options] <eventName|filename> [url] [device] [requestType]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Examples:",
            "particle webhook create temp https://xyz.com  Make POST requests to xyz.com every time a temp event is received",
            "particle webhook create hook.json             Create a webhook according to the template in hook.json",
            "",
            "To customize the hook parameters use a JSON template. See https://docs.particle.io/reference/webhooks/ for details",
            "{",
            "\"event\": \"my-event\",",
            "\"url\": \"https://my-website.com/fancy_things.php\",",
            "\"deviceid\": \"optionally filter by providing a device id\",",
            "",
            "\"_\": \"The following parameters are optional\",",
            "\"requestType\": \"GET/POST/PUT/DELETE\",",
            "\"form\": null,",
            "\"json\": null,",
            "\"body\": null,",
            "\"headers\": null,",
            "\"query\": null,",
            "\"auth\": null,",
            "\"responseTemplate\": null,",
            "\"rejectUnauthorized\": \"true/false\"",
            "}",
            ""
        ],
        "list": [
            "Show your current Webhooks",
            "Usage: particle webhook list [options]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            ""
        ],
        "delete": [
            "Deletes a Webhook",
            "Usage: particle webhook delete [options] <hookId>",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            "",
            "Examples:",
            "particle webhook delete 5a8ef38cb85f8720edce631a  Delete webhook with this ID. Find the ID from the list webhook command",
            "particle webhook delete all                       Delete all my webhooks",
            ""
        ],
        "POST": [
            "Create a new POST request hook",
            "Usage: particle webhook POST [options] <eventName> <url> [device]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            ""
        ],
        "GET": [
            "Create a new GET request hook",
            "Usage: particle webhook GET [options] <eventName> <url> [device]",
            "",
            "Global Options:",
            "-v, --verbose  Increases how much logging to display  [count]",
            "-q, --quiet    Decreases how much logging to display  [count]",
            ""
        ]
    },
    "whoami": {}
}
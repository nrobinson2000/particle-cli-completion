#!/bin/bash
# particle-cli-completion
# Made by Nathan Robinson
# @nrobinson2000
# File: particle-cli.completion
# Desc: Bash competion for particle-cli

_particle()
{
    local cur prev _primary _binary _cloud _device _config _flash _function \
    _keys _library _serial _subscribe _token _udp _variable _webhook _wireless

    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"

    _primary="setup list call get device identify flash subscribe compile monitor
    login logout help library token binary cloud config function keys serial udp
    update variable webhook wireless"

    _binary="inspect"
    _cloud="claim list remove name flash compile nyan login logout"
    _device="add remove rename"
    _config="local particle useSudoForDfu list identify"
    _flash="--usb --serial"
    _function="list call"
    _keys="new load save send doctor server address protocol"
    _library="create copy migrate search upload publish add"
    _serial="list monitor identify wifi mac inspect flash claim"
    _subscribe="mine"
    _token="list revoke new"
    _udp="send listen"
    _variable="list get monitor"
    _webhook="create list delete POST GET"
    _wireless="list monitor"

  if [[ ${prev} == "particle" ]]; then
      COMPREPLY=( $(compgen -W "${_primary}" -- ${cur}) )
      return 0

    elif [[ ${prev} == "help" ]]; then
      COMPREPLY=( $(compgen -W "${_primary}" -- ${cur}) )
      return 0

   elif [[ ${prev} == "library" ]]; then
     COMPREPLY=( $(compgen -W "${_library}" -- ${cur}) )
     return 0

   elif [[ ${prev} == "binary" ]]; then
     COMPREPLY=( $(compgen -W "${_binary}" -- ${cur}) )
     return 0

   elif [[ ${prev} == "cloud" ]]; then
     COMPREPLY=( $(compgen -W "${_cloud}" -- ${cur}) )
     return 0

   elif [[ ${prev} == "config" ]]; then
     COMPREPLY=( $(compgen -W "${_config}" -- ${cur}) )
     return 0

   elif [[ ${prev} == "flash" ]]; then
     COMPREPLY=( $(compgen -W "${_flash}" -- ${cur}) )
     return 0

   elif [[ ${prev} == "function" ]]; then
     COMPREPLY=( $(compgen -W "${_function}" -- ${cur}) )
     return 0

   elif [[ ${prev} == "keys" ]]; then
     COMPREPLY=( $(compgen -W "${_keys}" -- ${cur}) )
     return 0

   elif [[ ${prev} == "library" ]]; then
     COMPREPLY=( $(compgen -W "${_library}" -- ${cur}) )
     return 0

   elif [[ ${prev} == "serial" ]]; then
     COMPREPLY=( $(compgen -W "${_serial}" -- ${cur}) )
     return 0

   elif [[ ${prev} == "subscribe" ]]; then
     COMPREPLY=( $(compgen -W "${_subscribe}" -- ${cur}) )
     return 0

   elif [[ ${prev} == "token" ]]; then
     COMPREPLY=( $(compgen -W "${_token}" -- ${cur}) )
     return 0

   elif [[ ${prev} == "udp" ]]; then
     COMPREPLY=( $(compgen -W "${_udp}" -- ${cur}) )
     return 0

   elif [[ ${prev} == "variable" ]]; then
     COMPREPLY=( $(compgen -W "${_variable}" -- ${cur}) )
     return 0

   elif [[ ${prev} == "webhook" ]]; then
     COMPREPLY=( $(compgen -W "${_webhook}" -- ${cur}) )
     return 0

   elif [[ ${prev} == "wireless" ]]; then
     COMPREPLY=( $(compgen -W "${_wireless}" -- ${cur}) )
     return 0
    fi
}

complete -F _particle particle
